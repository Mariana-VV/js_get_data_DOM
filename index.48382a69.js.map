{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCIA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAiB,SAAS,gBAAgB,CAAC,iB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAC7C,EAAQ,EAEZ,EAAW,OAAO,CAAC,SAAC,CAApB,EAIE,IAKqB,EACjB,EANE,GAKe,EANH,AAFF,EAAK,WAAW,CAEN,KAAK,CAAC,KAO5B,EAAS,GAEb,EAAM,OAAO,CAAC,SAAC,CAAf,EACE,GAAU,CACZ,GAEO,GAVP,GAAS,SAAS,EACpB,GAYA,IAAM,EAAU,EAAQ,EAAW,MAAM,CAEnC,EAAiB,EAAM,cAAc,CAAC,SACtC,EAAmB,EAAQ,cAAc,CAAC,QAEhD,CAAA,SAAS,aAAa,CAAC,qBAAqB,SAAS,CAAG,EACxD,SAAS,aAAa,CAAC,uBAAuB,SAAS,CAAG","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write your code here\nvar population = _to_consumable_array(document.querySelectorAll(\".population\"));\nvar total = 0;\npopulation.forEach(function(item) {\n    var country = item.textContent;\n    var temtArray = country.split(\",\");\n    var result = arrayToString(temtArray);\n    total += parseInt(result);\n});\nfunction arrayToString(array) {\n    var result = \"\";\n    array.forEach(function(element) {\n        result += element;\n    });\n    return result;\n}\nvar average = total / population.length;\nvar totalFormatted = total.toLocaleString(\"en-US\");\nvar averageFormatted = average.toLocaleString(\"en-US\");\ndocument.querySelector(\".total-population\").innerHTML = totalFormatted;\ndocument.querySelector(\".average-population\").innerHTML = averageFormatted;\n\n//# sourceMappingURL=index.48382a69.js.map\n","'use strict';\n\n// write your code here\n\nconst population = [...document.querySelectorAll('.population')];\nlet total = 0;\n\npopulation.forEach((item) => {\n  const country = item.textContent;\n\n  const temtArray = country.split(',');\n  const result = arrayToString(temtArray);\n\n  total += parseInt(result);\n});\n\nfunction arrayToString(array) {\n  let result = '';\n\n  array.forEach((element) => {\n    result += element;\n  });\n\n  return result;\n}\n\nconst average = total / population.length;\n\nconst totalFormatted = total.toLocaleString('en-US');\nconst averageFormatted = average.toLocaleString('en-US');\n\ndocument.querySelector('.total-population').innerHTML = totalFormatted;\ndocument.querySelector('.average-population').innerHTML = averageFormatted;\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","population","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","total","forEach","item","array","result","country","textContent","split","element","parseInt","average","totalFormatted","toLocaleString","averageFormatted","querySelector","innerHTML"],"version":3,"file":"index.48382a69.js.map"}